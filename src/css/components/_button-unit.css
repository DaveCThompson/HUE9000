/* src/css/components/_button-unit.css (REFACTOR-V2.1) */
/* Styles for .button-unit, using variables from _variables-theme-contract.css */

.button-unit {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: var(--button-unit-radius);
    cursor: pointer;
    user-select: none;
    -webkit-user-select: none;
    z-index: 6;
    overflow: hidden;
    padding: var(--space-sm);
    box-sizing: border-box;

    background-color: oklch(var(--btn-unlit-bg-l) var(--btn-unlit-bg-c) var(--btn-unlit-bg-h) / var(--btn-unlit-bg-a));
    border: 1px solid oklch(var(--btn-unlit-border-l) var(--btn-unlit-border-c) var(--btn-unlit-border-h) / var(--btn-unlit-border-a));
    color: oklch(var(--btn-unlit-text-l) var(--btn-unlit-text-c) var(--btn-unlit-text-h) / var(--btn-unlit-text-a));
    box-shadow: 0 0 var(--btn-glow-size, 0px) var(--btn-glow-spread, 0px) var(--btn-glow-color, transparent);
    opacity: var(--theme-component-opacity); 

    transition:
        transform var(--button-unit-transition-duration) ease,
        background-color var(--button-p4-prime-transition-duration, var(--transition-duration-medium)) ease,
        border-color var(--button-p4-prime-transition-duration, var(--transition-duration-medium)) ease,
        color var(--button-p4-prime-transition-duration, var(--transition-duration-medium)) ease,
        text-shadow var(--button-p4-prime-transition-duration, var(--transition-duration-medium)) ease,
        box-shadow var(--button-p4-prime-transition-duration, var(--transition-duration-medium)) ease,
        opacity var(--button-p4-prime-transition-duration, var(--transition-duration-medium)) ease;
}

/* Light Container & Individual Lights */
.button-unit .light-container {
    position: absolute;
    inset: 0;
    z-index: 1;
    overflow: hidden;
    border-radius: inherit;
    pointer-events: none;
    display: flex;
    align-items: center;
    justify-content: space-around;
    padding: 0 var(--space-xs);
}

.button-unit .light {
    position: relative;
    width: var(--button-unit-light-object-base-size);
    height: var(--button-unit-light-object-base-size);
    border-radius: 50%;
    filter: blur(var(--button-unit-light-object-base-blur)); 

    background-color: oklch(var(--btn-unlit-light-l) var(--btn-unlit-light-c) var(--btn-unlit-light-h));
    opacity: var(--_current-light-opacity, var(--btn-unlit-light-a));

    transition:
        opacity var(--button-light-transition-duration) ease-out,
        background-color var(--transition-duration-medium) ease,
        transform var(--button-light-transition-duration) ease-out,
        filter var(--button-light-transition-duration) ease-out;
    will-change: opacity, transform, filter, background-color;
}

/* Button Background Frame (if needed for complex bg effects) */
.button-unit .button-bg-frame {
    position: absolute;
    inset: 0;
    border-radius: inherit;
    z-index: -1;
}

/* Button Text */
.button-unit .button-text {
    position: relative;
    z-index: 2;
    font-family: 'Inter', sans-serif;
    font-size: 16px;
    font-weight: 600;
    line-height: normal;
    text-align: center;
    padding: 0 var(--space-sm);
    pointer-events: none;
}

/* --- Button Sizes --- */
.button-unit--s {
    min-width: var(--space-3xl);
    min-height: var(--space-lg);
    padding: var(--space-xs);
}
.button-unit--s .button-text { display: none; }

.button-unit.button-unit--s .light {
    height: 100%;
    width: auto;
    aspect-ratio: 1 / 1;
    border-radius: 50%;
    filter: blur(16px);
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%) scale(var(--button-unit-light-responsive-scale-factor));
}

.button-unit--m {
    min-width: 70px;
    height: var(--button-l-fixed-height);
    min-height: var(--button-l-fixed-height);
    padding: var(--space-sm);
}
.button-unit--m .button-text { font-size: 14px; }
.button-unit--m .light-container { gap: var(--space-xs); }
.button-unit--m .light {
    width: calc(var(--button-unit-light-object-base-size) * 0.7);
    height: calc(var(--button-unit-light-object-base-size) * 0.7);
    filter: blur(calc(var(--button-unit-light-object-base-blur) * 0.7));
    position: relative;
    transform: none;
}

.button-unit--l {
    height: var(--button-l-fixed-height) !important;
    min-height: var(--button-l-fixed-height) !important;
    padding: var(--space-md);
    align-items: center;
}
.button-unit--l .button-text { font-size: 16px; }
.button-unit--l .light-container { gap: var(--space-sm); }
.button-unit--l .light {
    position: relative;
    transform: none;
}


/* --- State: Unlit (Used in theme-dim primarily) --- */
.button-unit.is-unlit {
    --btn-glow-opacity: 0;
    --btn-glow-size: 0px;
    box-shadow: 0 0 var(--btn-glow-size) var(--btn-glow-spread) var(--btn-glow-color);
    background-color: oklch(var(--btn-unlit-bg-l) var(--btn-unlit-bg-c) var(--btn-unlit-bg-h) / var(--btn-unlit-bg-a));
    border-color: oklch(var(--btn-unlit-border-l) var(--btn-unlit-border-c) var(--btn-unlit-border-h) / var(--btn-unlit-border-a));
    color: oklch(var(--btn-unlit-text-l) var(--btn-unlit-text-c) var(--btn-unlit-text-h) / var(--btn-unlit-text-a));
}
.button-unit.is-unlit .light {
    --_current-light-opacity: var(--btn-unlit-light-a);
    background-color: oklch(var(--btn-unlit-light-l) var(--btn-unlit-light-c) var(--btn-unlit-light-h));
    opacity: var(--_current-light-opacity);
}

/* --- State: Energized (Unselected) --- */
.button-unit.is-energized:not(.is-selected) {
    background-color: oklch(var(--btn-energized-unselected-bg-l) var(--btn-energized-unselected-bg-c) var(--btn-energized-unselected-bg-h) / var(--btn-energized-unselected-bg-a));
    border-color: oklch(var(--btn-energized-unselected-border-l) var(--btn-energized-unselected-border-c) var(--btn-energized-unselected-border-h) / var(--btn-energized-unselected-border-a));
    color: oklch(var(--btn-energized-unselected-text-l) var(--btn-energized-unselected-text-c) var(--btn-energized-unselected-text-h) / var(--btn-energized-unselected-text-a));
    text-shadow: var(--btn-energized-unselected-shadow);
    --btn-glow-opacity: var(--btn-unselected-glow-base-opacity); 
    --btn-glow-size: var(--btn-unselected-glow-base-size);
    box-shadow: 0 0 var(--btn-glow-size) var(--btn-glow-spread) var(--btn-glow-color); 
}
.button-unit.is-energized:not(.is-selected) .light {
    --_current-light-opacity: var(--btn-energized-unselected-light-a);
    background-color: oklch(var(--btn-energized-unselected-light-l) var(--btn-energized-unselected-light-c) var(--btn-energized-unselected-light-h));
    opacity: var(--_current-light-opacity);
}

/* --- State: Energized (Selected) --- */
.button-unit.is-energized.is-selected {
    background-color: oklch(var(--btn-energized-selected-bg-l) var(--btn-energized-selected-bg-c) var(--btn-energized-selected-bg-h) / var(--btn-energized-selected-bg-a));
    border-color: oklch(var(--btn-energized-selected-border-l) var(--btn-energized-selected-border-c) var(--btn-energized-selected-border-h) / var(--btn-energized-selected-border-a));
    color: oklch(var(--btn-energized-selected-text-l) var(--btn-energized-selected-text-c) var(--btn-energized-selected-text-h) / var(--btn-energized-selected-text-a));
    text-shadow: var(--btn-energized-selected-shadow);
    --btn-glow-opacity: var(--btn-selected-glow-base-opacity); 
    --btn-glow-size: var(--btn-selected-glow-base-size);
    box-shadow: 0 0 var(--btn-glow-size) var(--btn-glow-spread) oklch(var(--btn-energized-selected-glow-l) var(--btn-energized-selected-glow-c) var(--btn-energized-selected-glow-h) / var(--btn-glow-opacity));
}
.button-unit.is-energized.is-selected .light {
    background-color: oklch(var(--btn-energized-selected-light-l) var(--btn-energized-selected-light-c) var(--btn-energized-selected-light-h));
    opacity: var(--btn-energized-selected-light-a);
}

/* --- State: Dimly Lit (Used in theme-dim) --- */
.button-unit.is-dimly-lit {
    background-color: oklch(var(--btn-dimly-lit-bg-l) var(--btn-dimly-lit-bg-c) var(--btn-dimly-lit-bg-h) / var(--btn-dimly-lit-bg-a));
    border-color: oklch(var(--btn-dimly-lit-border-l) var(--btn-dimly-lit-border-c) var(--btn-dimly-lit-border-h) / var(--btn-dimly-lit-border-a));
    color: oklch(var(--btn-dimly-lit-text-l) var(--btn-dimly-lit-text-c) var(--btn-dimly-lit-text-h) / var(--btn-dimly-lit-text-a));
    --btn-glow-opacity: 0; 
    --btn-glow-size: var(--btn-dimly-lit-glow-size, 0px);
    box-shadow: 0 0 var(--btn-glow-size) var(--btn-glow-spread) var(--btn-dimly-lit-glow-color, transparent); 
}
.button-unit.is-dimly-lit .light {
    --_current-light-opacity: var(--btn-dimly-lit-light-a);
    background-color: oklch(var(--btn-dimly-lit-light-l) var(--btn-dimly-lit-light-c) var(--btn-dimly-lit-light-h));
    opacity: var(--_current-light-opacity);
}


/* --- State: Pressing --- */
.button-unit.is-pressing {
    transform: var(--button-unit-pressed-transform);
}

.button-unit.is-energized.is-pressing {
    background-color: oklch(var(--btn-energized-pressing-bg-l) var(--btn-energized-pressing-bg-c) var(--btn-energized-pressing-bg-h) / var(--btn-energized-pressing-bg-a));
    border-color: oklch(var(--btn-energized-pressing-border-l) var(--btn-energized-unselected-border-c) var(--btn-energized-unselected-border-h) / var(--btn-energized-pressing-border-a));
    color: oklch(var(--btn-energized-pressing-text-l) var(--btn-energized-unselected-text-c) var(--btn-energized-unselected-text-h) / var(--btn-energized-unselected-text-a));
    --btn-glow-opacity: var(--btn-energized-pressing-glow-opacity);
    --btn-glow-size: var(--btn-energized-pressing-glow-size);
    box-shadow:
        inset 0 0 3px 1px var(--btn-pressed-innershadow-color),
        0 0 var(--btn-glow-size) var(--btn-glow-spread) var(--btn-glow-color); 
}
.button-unit.is-energized.is-pressing .light {
    background-color: oklch(var(--btn-energized-pressing-light-l) var(--btn-energized-unselected-light-c) var(--btn-energized-unselected-light-h));
    opacity: var(--btn-energized-pressing-light-a);
}

.button-unit:not(.is-energized).is-pressing {
     background-color: oklch(
        calc(var(--btn-unlit-bg-l) + var(--btn-pressed-bg-l-offset))
        var(--btn-unlit-bg-c)
        var(--btn-unlit-bg-h) /
        calc(var(--btn-unlit-bg-a) + var(--btn-pressed-bg-a-offset))
    );
    box-shadow: inset 0 0 3px 1px var(--btn-pressed-innershadow-color);
}
.button-unit.is-dimly-lit.is-pressing {
     background-color: oklch(
        calc(var(--btn-dimly-lit-bg-l) + var(--btn-pressed-bg-l-offset))
        var(--btn-dimly-lit-bg-c)
        var(--btn-dimly-lit-bg-h) /
        var(--btn-dimly-lit-bg-a)
    );
}


/* --- Flicker Animation Control --- */
.button-unit.is-flickering,
.button-unit.is-flickering * {
    transition-property: none !important;
    transition-duration: 0s !important;
}

/* --- Hover Effect for non-selected, non-pressing buttons --- */
.button-unit:not(.is-selected):not(.is-pressing):not(.button-unit--s):hover .light {
    transition: opacity var(--btn-hover-transition-duration) ease, transform var(--btn-hover-transition-duration) ease;
    opacity: calc(var(--_current-light-opacity, var(--btn-unlit-light-a)) + var(--btn-hover-light-opacity-boost));
    transform: scale(var(--btn-hover-light-scale));
}

.button-unit.button-unit--s:not(.is-selected):not(.is-pressing):hover .light {
    transition: opacity var(--btn-hover-transition-duration) ease, transform var(--btn-hover-transition-duration) ease;
    opacity: calc(var(--_current-light-opacity, var(--btn-unlit-light-a)) + var(--btn-hover-light-opacity-boost));
    transform: translate(-50%, -50%) scale(var(--button-unit-light-responsive-scale-factor)) scale(var(--btn-hover-light-scale));
}

.button-unit.is-energized:not(.is-selected):not(.is-pressing):hover {
     box-shadow: 0 0 calc(var(--btn-glow-size) * 1.2) var(--btn-glow-spread) oklch(var(--btn-energized-unselected-glow-hover-l) var(--btn-energized-unselected-glow-hover-c) var(--btn-energized-unselected-glow-hover-h) / var(--btn-energized-unselected-glow-hover-a));
}
.button-unit.is-energized.is-selected:not(.is-pressing):hover {
    box-shadow: 0 0 calc(var(--btn-glow-size) * 1.1) var(--btn-glow-spread) oklch(var(--btn-energized-selected-glow-l) var(--btn-energized-selected-glow-c) var(--btn-energized-selected-glow-h) / calc(var(--btn-glow-opacity) * 1.1));
}


/* Toggle Button Group (shared layout) */
.toggle-button-group {
  display: flex;
  gap: var(--space-md);
  align-items: stretch;
  justify-content: center;
  width: 100%;
  position: relative;
  z-index: 2;
}

/* CSS-driven Harmonic Resonance */
.button-unit.is-energized.is-selected.is-resonating .light {
    opacity: var(--harmonic-resonance-opacity-target, var(--btn-energized-selected-light-a));
    /* Optional: A very short transition can smooth CSS var updates if they aren't perfectly synced with frames */
    /* transition: opacity 0.016s linear; */
}