/* src/css/components/_lcd.css (REFACTOR-V2.1) */
/* Styles for LCD screens (Terminal, Dial LCDs). Uses theme variables. */

.actual-lcd-screen-element,
.hue-lcd-display {
    width: 100%;
    position: relative; 
    overflow: hidden; 
    background-color: oklch(
        var(--lcd-active-grad-end-l) 
        calc(var(--dynamic-lcd-chroma) * var(--lcd-base-chroma-factor)) 
        var(--dynamic-lcd-hue)
    );
    background-image: radial-gradient(ellipse at center,
        oklch(var(--lcd-active-grad-start-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-base-chroma-factor)) var(--dynamic-lcd-hue)) 0%,
        oklch(calc(var(--lcd-active-grad-end-l) * 0.8) calc(var(--dynamic-lcd-chroma) * var(--lcd-base-chroma-factor)) var(--dynamic-lcd-hue)) 100%
    );
    color: oklch(var(--lcd-active-text-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-base-chroma-factor)) var(--dynamic-lcd-hue) / var(--lcd-active-text-a));
    border: 1px solid oklch(var(--lcd-active-border-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-base-chroma-factor)) var(--dynamic-lcd-hue) / var(--lcd-active-border-a));
    border-radius: var(--space-xs);
    padding: var(--space-md); 
    box-shadow: var(--lcd-active-shadow-inner-glow); 
    font-family: 'IBM Plex Mono', monospace;
    box-sizing: border-box;
    opacity: var(--theme-component-opacity); 
    /* REMOVED: text-shadow property moved to more specific selectors */

    display: flex;
    flex-direction: column;
    /* justify-content: center; -- Default, overridden by specific LCD types */
    /* align-items: stretch; -- Default, overridden by specific LCD types */


    transition:
        background-color var(--transition-duration-medium) ease, 
        background-image var(--transition-duration-medium) ease,
        border-color var(--transition-duration-medium) ease,
        color var(--transition-duration-medium) ease,
        box-shadow var(--transition-duration-medium) ease,
        opacity var(--transition-duration-medium) ease,
        text-shadow var(--transition-duration-medium) ease;
}

/* CRT Overlay using ::after pseudo-element */
.actual-lcd-screen-element::after,
.hue-lcd-display::after {
    content: '';
    position: absolute;
    inset: 0;
    background-image: url('/public/crt-overlay.png');
    background-size: var(--lcd-crt-overlay-size, 1920px 1120px);
    background-repeat: repeat;
    background-position: 0 0;
    mix-blend-mode: var(--lcd-crt-overlay-blend-mode, multiply);
    opacity: calc(var(--lcd-crt-overlay-opacity, 0.2) * var(--startup-opacity-factor, 0)); 
    pointer-events: none;
    z-index: 1; 
    border-radius: inherit;
    transition: opacity var(--transition-duration-medium) ease;
}

/* Terminal LCD Specifics */
.terminal-block .actual-lcd-screen-element { /* MODIFIED: Corrected selector */
    flex-grow: 1;
    min-height: 50px;
    font-size: var(--lcd-content-font-size, 0.95em); 
    font-weight: 500; 
    line-height: 1.4; 
    white-space: pre-wrap;
    word-break: break-all;
    justify-content: flex-start; /* MODIFIED: For top alignment of terminal content */
    align-items: stretch; 
    text-align: left;
}
.terminal-block .actual-lcd-screen-element > #terminal-lcd-content {
    /* #terminal-lcd-content will naturally fill due to align-items:stretch */
}

/* Dial LCD Specifics */
.hue-lcd-display { /* This is the main container for Dial A (Mood Matrix) and Dial B (Numeric) */
   height: var(--hue-lcd-display-height); 
   flex-shrink: 0;
   /* Default flex properties for .hue-lcd-display (can be overridden by more specific selectors) */
   justify-content: center; 
   align-items: center;   
}

/* Specific override for Dial A (Mood Matrix) container */
.hue-lcd-display#hue-lcd-A {
    justify-content: center; /* Vertically centers the mood-matrix-rows-wrapper */
    align-items: stretch; /* Allows mood-matrix-rows-wrapper to take full width */
}


/* Numeric value span, now only for Dial B LCD */
.hue-lcd-display#hue-lcd-B .lcd-value { 
    /* Parent #hue-lcd-B uses justify/align:center, so this will be centered */
    z-index: 2; 
    font-size: var(--lcd-content-font-size, 1em); 
    font-weight: 600;
    line-height: 1; 
    transition: color var(--transition-duration-medium) ease, opacity var(--transition-duration-medium) ease;
    /* ADDED: text-shadow to restore glow effect specifically for dial LCDs */
    text-shadow: 0 0 8px oklch(var(--lcd-active-text-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-base-chroma-factor)) var(--dynamic-lcd-hue) / var(--lcd-text-shadow-base-alpha, 0.3));
}

/* --- LCD State Classes --- */
.lcd--unlit {
    background-image: none !important; 
    background-color: oklch(var(--lcd-unlit-bg-l) var(--lcd-unlit-bg-c) var(--lcd-unlit-bg-h) / var(--lcd-unlit-bg-a));
    color: oklch(var(--lcd-unlit-text-l) var(--lcd-unlit-text-c) var(--lcd-unlit-text-h) / var(--lcd-unlit-text-a)); 
    border-color: oklch(var(--lcd-unlit-border-l) var(--lcd-unlit-border-c) var(--lcd-unlit-border-h) / var(--lcd-unlit-border-a));
    box-shadow: var(--lcd-unlit-shadow);
    text-shadow: 0 0 5px oklch(var(--lcd-unlit-text-l) var(--lcd-unlit-text-c) var(--lcd-unlit-text-h) / 0); 
}
.lcd--unlit#hue-lcd-B .lcd-value { 
    opacity: 0; 
    text-shadow: none; /* ADDED: Ensure no shadow when unlit */
}
.lcd--unlit#terminal-lcd-content { 
     color: oklch(var(--lcd-unlit-text-l) var(--lcd-unlit-text-c) var(--lcd-unlit-text-h) / var(--lcd-unlit-text-a));
}
.lcd--unlit::after { 
    opacity: 0 !important; 
}


/* MODIFIED: Harmonized .js-active-dim-lcd to match .lcd--dimly-lit */
.js-active-dim-lcd { 
    background-color: oklch(
        var(--lcd-dimly-lit-grad-end-l) 
        calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) 
        var(--dynamic-lcd-hue)
    ); 
    background-image: radial-gradient(ellipse at center,
        oklch(var(--lcd-dimly-lit-grad-start-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) var(--dynamic-lcd-hue)) 0%,
        oklch(calc(var(--lcd-dimly-lit-grad-end-l) * 0.8) calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) var(--dynamic-lcd-hue)) 100%
    );
    color: oklch(var(--lcd-dimly-lit-text-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) var(--dynamic-lcd-hue) / var(--lcd-dimly-lit-text-a));
    border-color: oklch(var(--lcd-active-border-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) var(--dynamic-lcd-hue) / var(--lcd-active-border-a));
    box-shadow: var(--lcd-dimly-lit-shadow);
}
.js-active-dim-lcd#hue-lcd-B .lcd-value {
    color: oklch(var(--lcd-dimly-lit-text-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) var(--dynamic-lcd-hue) / var(--lcd-dimly-lit-text-a));
    text-shadow: 0 0 5px oklch(var(--lcd-dimly-lit-text-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) var(--dynamic-lcd-hue) / calc(var(--lcd-text-shadow-base-alpha) * var(--startup-opacity-factor, 0) * 0.7));
}
.js-active-dim-lcd#terminal-lcd-content { 
     color: oklch(var(--lcd-dimly-lit-text-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) var(--dynamic-lcd-hue) / var(--lcd-dimly-lit-text-a));
}
.js-active-dim-lcd::after { 
    opacity: calc(var(--lcd-crt-overlay-opacity, 0.2) * 0.5 * var(--startup-opacity-factor, 0)); 
}


.lcd--dimly-lit { 
    background-color: oklch(
        var(--lcd-dimly-lit-grad-end-l) 
        calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) 
        var(--dynamic-lcd-hue)
    ); 
    background-image: radial-gradient(ellipse at center,
        oklch(var(--lcd-dimly-lit-grad-start-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) var(--dynamic-lcd-hue)) 0%,
        oklch(calc(var(--lcd-dimly-lit-grad-end-l) * 0.8) calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) var(--dynamic-lcd-hue)) 100%
    );
    color: oklch(var(--lcd-dimly-lit-text-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) var(--dynamic-lcd-hue) / var(--lcd-dimly-lit-text-a));
    box-shadow: var(--lcd-dimly-lit-shadow);
    border-color: oklch(var(--lcd-active-border-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) var(--dynamic-lcd-hue) / var(--lcd-active-border-a));
    /* text-shadow removed from container */
}
.lcd--dimly-lit#hue-lcd-B .lcd-value {
     color: oklch(var(--lcd-dimly-lit-text-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) var(--dynamic-lcd-hue) / var(--lcd-dimly-lit-text-a));
     text-shadow: 0 0 5px oklch(var(--lcd-dimly-lit-text-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) var(--dynamic-lcd-hue) / calc(var(--lcd-text-shadow-base-alpha) * var(--startup-opacity-factor, 0) * 0.7));
}
.lcd--dimly-lit#terminal-lcd-content { 
     color: oklch(var(--lcd-dimly-lit-text-l) calc(var(--dynamic-lcd-chroma) * var(--lcd-dimly-lit-chroma-factor)) var(--dynamic-lcd-hue) / var(--lcd-dimly-lit-text-a));
}
.lcd--dimly-lit::after { 
    opacity: calc(var(--lcd-crt-overlay-opacity, 0.2) * 0.5 * var(--startup-opacity-factor, 0)); 
}