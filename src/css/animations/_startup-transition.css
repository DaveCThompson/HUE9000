/* src/css/animations/_startup-transition.css (Refactored for .animate-on-dim-exit) */

/*
 * This rule is active when body.is-transitioning-from-dim is present.
 * The .animate-on-dim-exit class is programmatically added by JS (startupSequenceManager.js)
 * to specific DOM elements that need this synchronized 1-second transition when
 * switching from DIM mode to a Full Theme (Dark/Light) during startup phase P6.
 * The class is removed by JS after the transition.
 */

/*
  Targets:
  1. The body element itself if it has .is-transitioning-from-dim and .animate-on-dim-exit.
  2. Any descendant element with .animate-on-dim-exit if its ancestor body has .is-transitioning-from-dim.
*/
body.is-transitioning-from-dim.animate-on-dim-exit,
body.is-transitioning-from-dim .animate-on-dim-exit {
    transition-property:
        opacity,
        background-color,
        color,
        border-color,
        box-shadow,
        fill, /* For SVG parts */
        stroke, /* For SVG parts */
        filter,
        background-image, /* For panel gradients, body background, LCD gradients */
        text-shadow
        !important;
    transition-duration: 1s !important; /* As per PRD, matches config.P6_CSS_TRANSITION_DURATION */
    transition-timing-function: ease-out !important; /* As per PRD */
    transition-delay: 0s !important;
}

/*
 * Special handling for #lens-container pseudo-elements to ensure their
 * background-image (conic gradients) also transition over 1s ease-out
 * during the DIM to Full Theme switch.
 * This overrides their default transition timing defined in _lens-container.css
 * only when body.is-transitioning-from-dim is active.
 */
body.is-transitioning-from-dim #lens-container::before,
body.is-transitioning-from-dim #lens-container::after {
    --lens-bezel-effective-transition-duration: 1s !important;
    --lens-bezel-effective-transition-timing: ease-out !important;
}

/*
 * Elements that should NOT use this global override (e.g., those actively
 * animated by GSAP like flickering lights) should have their own mechanisms
 * to prevent this, such as GSAP setting transition: 'none' or by not receiving
 * the .animate-on-dim-exit class if their transition is meant to be different.
 * The .is-flickering class (from Button.js) already sets transition-property: none !important.
 */